/*
 * storage open api
 * storage open api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xopenapi.storage.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 腾讯云上传凭证数据
 */
@ApiModel(description = "腾讯云上传凭证数据")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-05T11:22:04.968Z[GMT]")
public class QCloudCredentialsData {
  public static final String SERIALIZED_NAME_SESSION_TOKEN = "sessionToken";
  @SerializedName(SERIALIZED_NAME_SESSION_TOKEN)
  private String sessionToken;

  public static final String SERIALIZED_NAME_TMP_SECRET_ID = "tmpSecretId";
  @SerializedName(SERIALIZED_NAME_TMP_SECRET_ID)
  private String tmpSecretId;

  public static final String SERIALIZED_NAME_TMP_SECRET_KEY = "tmpSecretKey";
  @SerializedName(SERIALIZED_NAME_TMP_SECRET_KEY)
  private String tmpSecretKey;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private Long startTime;

  public static final String SERIALIZED_NAME_EXPIRED_TIME = "expiredTime";
  @SerializedName(SERIALIZED_NAME_EXPIRED_TIME)
  private Long expiredTime;

  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;


  public QCloudCredentialsData sessionToken(String sessionToken) {
    
    this.sessionToken = sessionToken;
    return this;
  }

   /**
   * 请求时需要用的 token 字符串，最终请求 COS API 时，需要放在 Header 的 x-cos-security-token 字段
   * @return sessionToken
  **/
  @ApiModelProperty(required = true, value = "请求时需要用的 token 字符串，最终请求 COS API 时，需要放在 Header 的 x-cos-security-token 字段")

  public String getSessionToken() {
    return sessionToken;
  }


  public void setSessionToken(String sessionToken) {
    this.sessionToken = sessionToken;
  }


  public QCloudCredentialsData tmpSecretId(String tmpSecretId) {
    
    this.tmpSecretId = tmpSecretId;
    return this;
  }

   /**
   * 临时密钥 Id，可用于计算签名
   * @return tmpSecretId
  **/
  @ApiModelProperty(required = true, value = "临时密钥 Id，可用于计算签名")

  public String getTmpSecretId() {
    return tmpSecretId;
  }


  public void setTmpSecretId(String tmpSecretId) {
    this.tmpSecretId = tmpSecretId;
  }


  public QCloudCredentialsData tmpSecretKey(String tmpSecretKey) {
    
    this.tmpSecretKey = tmpSecretKey;
    return this;
  }

   /**
   * 临时密钥 Key，可用于计算签名
   * @return tmpSecretKey
  **/
  @ApiModelProperty(required = true, value = "临时密钥 Key，可用于计算签名")

  public String getTmpSecretKey() {
    return tmpSecretKey;
  }


  public void setTmpSecretKey(String tmpSecretKey) {
    this.tmpSecretKey = tmpSecretKey;
  }


  public QCloudCredentialsData startTime(Long startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * 密钥的起始时间戳（毫秒）
   * @return startTime
  **/
  @ApiModelProperty(required = true, value = "密钥的起始时间戳（毫秒）")

  public Long getStartTime() {
    return startTime;
  }


  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }


  public QCloudCredentialsData expiredTime(Long expiredTime) {
    
    this.expiredTime = expiredTime;
    return this;
  }

   /**
   * 密钥的失效时间戳（毫秒）
   * @return expiredTime
  **/
  @ApiModelProperty(required = true, value = "密钥的失效时间戳（毫秒）")

  public Long getExpiredTime() {
    return expiredTime;
  }


  public void setExpiredTime(Long expiredTime) {
    this.expiredTime = expiredTime;
  }


  public QCloudCredentialsData requestId(String requestId) {
    
    this.requestId = requestId;
    return this;
  }

   /**
   * 请求ID
   * @return requestId
  **/
  @ApiModelProperty(required = true, value = "请求ID")

  public String getRequestId() {
    return requestId;
  }


  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QCloudCredentialsData qcloudCredentialsData = (QCloudCredentialsData) o;
    return Objects.equals(this.sessionToken, qcloudCredentialsData.sessionToken) &&
        Objects.equals(this.tmpSecretId, qcloudCredentialsData.tmpSecretId) &&
        Objects.equals(this.tmpSecretKey, qcloudCredentialsData.tmpSecretKey) &&
        Objects.equals(this.startTime, qcloudCredentialsData.startTime) &&
        Objects.equals(this.expiredTime, qcloudCredentialsData.expiredTime) &&
        Objects.equals(this.requestId, qcloudCredentialsData.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionToken, tmpSecretId, tmpSecretKey, startTime, expiredTime, requestId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QCloudCredentialsData {\n");
    sb.append("    sessionToken: ").append(toIndentedString(sessionToken)).append("\n");
    sb.append("    tmpSecretId: ").append(toIndentedString(tmpSecretId)).append("\n");
    sb.append("    tmpSecretKey: ").append(toIndentedString(tmpSecretKey)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    expiredTime: ").append(toIndentedString(expiredTime)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

